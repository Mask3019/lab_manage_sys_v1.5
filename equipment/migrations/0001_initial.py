# Generated by Django 5.0.6 on 2025-02-19 07:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "equipment_id",
                    models.CharField(
                        db_index=True,
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="设备编号",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="设备名称")),
                ("type", models.CharField(max_length=100, verbose_name="设备类型")),
                (
                    "equipment_status",
                    models.CharField(max_length=50, verbose_name="设备状态"),
                ),
                (
                    "last_maintenance_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="最新保养日期"
                    ),
                ),
                (
                    "usage_frequency",
                    models.CharField(max_length=50, verbose_name="使用频率"),
                ),
                (
                    "responsible_person",
                    models.CharField(max_length=100, verbose_name="设备负责人"),
                ),
                ("waiting_cost", models.FloatField(verbose_name="等待费用")),
                ("debugging_cost", models.FloatField(verbose_name="调试费用")),
                ("operating_cost", models.FloatField(verbose_name="运行费用")),
                (
                    "remark",
                    models.TextField(blank=True, null=True, verbose_name="备注"),
                ),
            ],
            options={
                "verbose_name": "设备",
                "verbose_name_plural": "设备",
            },
        ),
        migrations.CreateModel(
            name="EquipmentRepairApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "application_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="申请编号",
                    ),
                ),
                ("employee_id", models.CharField(max_length=10, verbose_name="工号")),
                (
                    "submitter_name",
                    models.CharField(max_length=100, verbose_name="提交人姓名"),
                ),
                ("application_date", models.DateField(verbose_name="申请日期")),
                (
                    "device_name",
                    models.CharField(max_length=100, verbose_name="设备名称"),
                ),
                ("fault_phenomenon", models.TextField(verbose_name="故障现象")),
                (
                    "fault_reason",
                    models.TextField(blank=True, null=True, verbose_name="故障原因"),
                ),
                (
                    "fault_locations",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="故障位置"
                    ),
                ),
                (
                    "fault_level",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="故障等级"
                    ),
                ),
                (
                    "solution",
                    models.TextField(blank=True, null=True, verbose_name="解决办法"),
                ),
                (
                    "start_time",
                    models.DateField(blank=True, null=True, verbose_name="开始时间"),
                ),
                (
                    "end_time",
                    models.DateField(blank=True, null=True, verbose_name="结束时间"),
                ),
                (
                    "duration",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="时长"
                    ),
                ),
                (
                    "line_leader_approval",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="条线领导审批状态"
                    ),
                ),
                (
                    "line_leader_rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="条线领导驳回原因"
                    ),
                ),
                (
                    "department_leader_approval",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="部门领导审批状态"
                    ),
                ),
                (
                    "department_leader_rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="部门领导驳回原因"
                    ),
                ),
                (
                    "area_leader_approval",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="区域领导审批状态"
                    ),
                ),
                (
                    "area_leader_rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="区域领导驳回原因"
                    ),
                ),
                (
                    "device_manager_approval",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="设备管理员审批状态"
                    ),
                ),
                (
                    "device_manager_rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="设备管理员驳回原因"
                    ),
                ),
                (
                    "device_repairer_approval",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="设备维修员审批状态"
                    ),
                ),
                (
                    "device_repairer_rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="设备维修员驳回原因"
                    ),
                ),
                (
                    "rejected_to",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="驳回给"
                    ),
                ),
            ],
            options={
                "verbose_name": "设备维修申请",
                "verbose_name_plural": "设备维修申请",
                "permissions": [
                    ("can_approve_line_leader", "Can approve as line leader"),
                    (
                        "can_approve_department_leader",
                        "Can approve as department leader",
                    ),
                    ("can_approve_area_leader", "Can approve as area leader"),
                    ("can_approve_device_manager", "Can approve as device manager"),
                    ("can_approve_device_repairer", "Can approve as device repairer"),
                ],
            },
        ),
        migrations.CreateModel(
            name="MaintenanceRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "equipment_serial_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="设备编号"
                    ),
                ),
                ("maintenance_date", models.DateField(verbose_name="保养日期")),
                ("description", models.TextField(verbose_name="保养描述")),
                (
                    "next_maintenance_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="下次保养日期"
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="equipment",
            constraint=models.UniqueConstraint(
                fields=("equipment_id",), name="unique_equipment_id"
            ),
        ),
        migrations.AddField(
            model_name="maintenancerecord",
            name="equipment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="equipment.equipment",
                verbose_name="设备",
            ),
        ),
    ]
